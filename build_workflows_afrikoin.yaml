### âœ… 1. Production: build-deploy.yml (avec validation de version + tag Git)

```yaml
name: Build & Deploy AfriKoin (Production)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (ex: 1.2.2)'
        required: true
        default: '1.2.2'

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Check if version already exists
        run: |
          git fetch --tags
          if git tag | grep -q "${{ github.event.inputs.version }}"; then
            echo "Version already exists: ${{ github.event.inputs.version }}"
            exit 1
          fi

  build-deploy:
    needs: check-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Set version
        run: |
          sed -i "s/version: .*/version: ${{ github.event.inputs.version }}/" eas.json

      - name: Build AAB (production)
        run: eas build --platform android --profile production --non-interactive
        env:
          EAS_TOKEN: ${{ secrets.EAS_TOKEN }}

      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: com.afrikoin.myapplication
          releaseFiles: ./build/*.aab
          track: production

      - name: Create Git tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag v${{ github.event.inputs.version }}
          git push origin v${{ github.event.inputs.version }}
```

---

### âœ… 2. Staging: build-staging.yml

```yaml
name: Build AfriKoin (Staging)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Staging version (ex: 1.2.2-staging)'
        required: true
        default: '1.2.2-staging'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Set version
        run: |
          sed -i "s/version: .*/version: ${{ github.event.inputs.version }}/" eas.json

      - name: Build APK (staging)
        run: eas build --platform android --profile preview --non-interactive
        env:
          EAS_TOKEN: ${{ secrets.EAS_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: staging-apk
          path: ./build/*.apk
```

---

### âœ… 3. Badge pour README.md

```markdown
![Build & Deploy (Prod)](https://github.com/moussebathily/afrikoin-app/actions/workflows/build-deploy.yml/badge.svg)
![Build (Staging)](https://github.com/moussebathily/afrikoin-app/actions/workflows/build-staging.yml/badge.svg)
```

---

ðŸ”§ **Ã‰tapes suivantes :**
1. Copier ces 2 fichiers dans `.github/workflows/`
2. Ajouter les secrets `EAS_TOKEN` et `GOOGLE_PLAY_SERVICE_ACCOUNT`
3. Mettre Ã  jour `eas.json` pour avoir les profils `production` et `preview`

Souhaites-tu aussi un `changelog.md` automatique Ã  chaque release ?
